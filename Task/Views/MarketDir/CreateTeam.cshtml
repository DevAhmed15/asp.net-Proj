@model Task.Models.Team

@{
    ViewBag.Title = "Cre";
}
<style>
    .editor-label {
    font-size:x-large
    }
</style>
<div class="container">
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

        <div class="editor-label">
            Available Trainees
        </div>
        <div class="editor-field">
           @if (ViewBag.user_id != null){
@Html.DropDownListFor(model => model.Trainee_id,
   (SelectList)ViewBag.user_id, String.Empty,
    new { @class = "form-control" })
           }
            @Html.ValidationMessageFor(model => model.Trainee_id)
        </div>
    <br /><br />
        <div class="editor-label">
            Available Market Directors
        </div>
        <div class="editor-field">
            @if (ViewBag.user_id != null)
            {
@Html.DropDownListFor(model => model.MD_id,
   (SelectList)ViewBag.user_mk, String.Empty,
    new { @class = "form-control" })
            }
            @Html.ValidationMessageFor(model => model.MD_id)
        </div>
    <br /><br />
        <div class="editor-label">
            Available Projects
        </div>
        <div class="editor-field">
            @if (ViewBag.proj_id != null)
            {
@Html.DropDownListFor(model => model.Proj_id,
   (SelectList)ViewBag.proj_id, String.Empty,
    new { @class = "form-control" })
            }
            @Html.ValidationMessageFor(model => model.Proj_id)
        </div>
    <br /><br />
           <div class="editor-field">
            <input type="hidden" name="IsApproved" value="0" />
            @Html.ValidationMessageFor(model => model.IsApproved)
        </div>

        <p>
            <input type="submit" class="btn btn-success" value="Create" />
        </p>
}
    <br /><br />
    @Html.ActionLink("Return Back", "Index", null, new { @class = "btn btn-info" })
<br /><br /><br /><br />
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
